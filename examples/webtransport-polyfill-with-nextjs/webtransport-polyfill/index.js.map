{"version":3,"sources":["../src/index.ts","../src/BidirectionalStream.ts","../src/DataGrams.ts","../src/ReceiveStream.ts","../src/SendStream.ts"],"names":["controller","resolve","reject"],"mappings":"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","sourcesContent":["// import \"regenerator-runtime/runtime.js\";\nimport { BidirectionalStream } from \"./BidirectionalStream\";\nimport { DataGrams } from \"./DataGrams\";\nimport { ReceiveStream } from \"./ReceiveStream\";\nimport { SendStream } from \"./SendStream\";\n\ndeclare global {\n  interface Window {\n    WebTransport: any;\n  }\n}\n\nexport class WebTransport {\n  public closed: Promise<unknown>;\n  public ready: Promise<unknown>;\n  #ws: WebSocket;\n  #connErr: any;\n  datagrams: DataGrams;\n  constructor(public url: string) {\n    this.closed = new Promise((resolve, reject) => { });\n    this.ready = new Promise((resolve, reject) => {\n      url = url.replace(/^http/, 'ws');\n      this.#ws = new WebSocket(url);\n      this.#ws.addEventListener('open', () => {\n        resolve(null);\n      }),\n      this.#ws.addEventListener('error', (err) => {\n        this.#connErr = err;\n        reject(err);\n      }),\n      this.#ws.addEventListener('close', () => {\n        this.closed = new Promise((resolve, reject) => { });\n        reject(this.#connErr);\n      }),\n      this.datagrams = new DataGrams(this.#ws);\n    });\n  }\n  createSendStream(): SendStream {\n    return new SendStream(this.#ws);\n  }\n  receiveStream(): ReceiveStream{\n    return new ReceiveStream(this.#ws);\n  }\n  createBidirectionalStream(): Promise<BidirectionalStream> {\n    return new Promise((resolve, reject) => {\n      resolve(new BidirectionalStream(this.#ws));\n    })\n  }\n  receiveBidrectionalStreams(): BidirectionalStream {\n    return new BidirectionalStream(this.#ws);\n  }\n}\n\nif (typeof window !== 'undefined') {\n  if (typeof window.WebTransport === \"undefined\") {\n    window.WebTransport = WebTransport;\n  }\n}\n\nexport default WebTransport;\n","export class BidirectionalStream {\n  writable: WritableStream<Uint8Array>;\n  readable: ReadableStream<Uint8Array>;\n  constructor(ws: WebSocket) {\n    return new Proxy(this, {\n      get(target, prop, receiver) {\n        if (prop === 'writable') {\n          return new WritableStream<Uint8Array>({\n            start(controller) {},\n            write(chunk) {\n              return new Promise((resolve, reject) => {\n                try {\n                  ws.send(chunk);\n                  resolve();\n                } catch (e) {\n                  reject(e);\n                }\n              });\n            },\n            close() {},\n            abort(reason) {},\n          });\n        } else if (prop === 'readable') {\n          return new ReadableStream({\n            start(controller) {\n              let timer: any | null = null;\n              const cb = ev => {\n                if (timer) {\n                  clearTimeout(timer);\n                }\n                controller.enqueue(ev.data);\n                timer = setTimeout(\n                  () => ws.removeEventListener('message', cb),\n                  1_000\n                );\n              };\n              ws.addEventListener('message', cb);\n            },\n            cancel() {},\n          });\n        }\n        return undefined;\n      },\n    });\n  }\n}\n","export class DataGrams {\n  writable: WritableStream<Uint8Array>;\n  readable: ReadableStream<Uint8Array>;\n  constructor(ws: WebSocket) {\n    return new Proxy(this, {\n      get(target, prop, receiver) {\n        if (prop === 'writable') {\n          return new WritableStream<Uint8Array>({\n            start(controller) {},\n            write(chunk) {\n              return new Promise((resolve, reject) => {\n                try {\n                  ws.send(chunk);\n                  resolve();\n                } catch (e) {\n                  reject(e);\n                }\n              });\n            },\n            close() {},\n            abort(reason) {},\n          });\n        } else if (prop === 'readable') {\n          return new ReadableStream({\n            start(controller) {\n              let timer: any | null = null;\n              const cb = ev => {\n                if (timer) {\n                  clearTimeout(timer);\n                }\n                controller.enqueue(ev.data);\n                timer = setTimeout(\n                  () => ws.removeEventListener('message', cb),\n                  1_000\n                );\n              };\n              ws.addEventListener('message', cb);\n            },\n            cancel() {},\n          });\n        }\n        return undefined;\n      },\n    });\n  }\n}\n","export class ReceiveStream {\n  constructor(ws: WebSocket) {\n    return new ReadableStream({\n      start(controller) {\n        let timer: any | null = null;\n        const cb = ev => {\n          if (timer) {\n            clearTimeout(timer);\n          }\n          controller.enqueue(\n            new ReadableStream({\n              start(controller) {\n                controller.enqueue(ev.data);\n              },\n            })\n          );\n          timer = setTimeout(\n            () => ws.removeEventListener('message', cb),\n            1_000\n          );\n        };\n        ws.addEventListener('message', cb);\n      },\n      cancel() {},\n    });\n  }\n}\n","export class SendStream {\n  constructor(ws: WebSocket) {\n    return new Proxy(this, {\n      get(target, prop, receiver) {\n        if (prop === 'writable') {\n          return new WritableStream<Uint8Array>({\n            start(controller) {},\n            write(chunk) {\n              return new Promise((resolve, reject) => {\n                try {\n                  ws.send(chunk);\n                  resolve();\n                } catch (e) {\n                  reject(e);\n                }\n              });\n            },\n            close() {},\n            abort(reason) {},\n          });\n        }\n        return undefined;\n      },\n    });\n  }\n}\n"]}