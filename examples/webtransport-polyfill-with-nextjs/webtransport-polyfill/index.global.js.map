{"version":3,"sources":["../src/BidirectionalStream.ts","../src/DataGrams.ts","../src/ReceiveStream.ts","../src/SendStream.ts","../src/index.ts"],"names":["controller","resolve","reject"],"mappings":"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","sourcesContent":["export class BidirectionalStream {\n  writable: WritableStream<Uint8Array>;\n  readable: ReadableStream<Uint8Array>;\n  constructor(ws: WebSocket) {\n    return new Proxy(this, {\n      get(target, prop, receiver) {\n        if (prop === 'writable') {\n          return new WritableStream<Uint8Array>({\n            start(controller) {},\n            write(chunk) {\n              return new Promise((resolve, reject) => {\n                try {\n                  ws.send(chunk);\n                  resolve();\n                } catch (e) {\n                  reject(e);\n                }\n              });\n            },\n            close() {},\n            abort(reason) {},\n          });\n        } else if (prop === 'readable') {\n          return new ReadableStream({\n            start(controller) {\n              let timer: any | null = null;\n              const cb = ev => {\n                if (timer) {\n                  clearTimeout(timer);\n                }\n                controller.enqueue(ev.data);\n                timer = setTimeout(\n                  () => ws.removeEventListener('message', cb),\n                  1_000\n                );\n              };\n              ws.addEventListener('message', cb);\n            },\n            cancel() {},\n          });\n        }\n        return undefined;\n      },\n    });\n  }\n}\n","export class DataGrams {\n  writable: WritableStream<Uint8Array>;\n  readable: ReadableStream<Uint8Array>;\n  constructor(ws: WebSocket) {\n    return new Proxy(this, {\n      get(target, prop, receiver) {\n        if (prop === 'writable') {\n          return new WritableStream<Uint8Array>({\n            start(controller) {},\n            write(chunk) {\n              return new Promise((resolve, reject) => {\n                try {\n                  ws.send(chunk);\n                  resolve();\n                } catch (e) {\n                  reject(e);\n                }\n              });\n            },\n            close() {},\n            abort(reason) {},\n          });\n        } else if (prop === 'readable') {\n          return new ReadableStream({\n            start(controller) {\n              let timer: any | null = null;\n              const cb = ev => {\n                if (timer) {\n                  clearTimeout(timer);\n                }\n                controller.enqueue(ev.data);\n                timer = setTimeout(\n                  () => ws.removeEventListener('message', cb),\n                  1_000\n                );\n              };\n              ws.addEventListener('message', cb);\n            },\n            cancel() {},\n          });\n        }\n        return undefined;\n      },\n    });\n  }\n}\n","export class ReceiveStream {\n  constructor(ws: WebSocket) {\n    return new ReadableStream({\n      start(controller) {\n        let timer: any | null = null;\n        const cb = ev => {\n          if (timer) {\n            clearTimeout(timer);\n          }\n          controller.enqueue(\n            new ReadableStream({\n              start(controller) {\n                controller.enqueue(ev.data);\n              },\n            })\n          );\n          timer = setTimeout(\n            () => ws.removeEventListener('message', cb),\n            1_000\n          );\n        };\n        ws.addEventListener('message', cb);\n      },\n      cancel() {},\n    });\n  }\n}\n","export class SendStream {\n  constructor(ws: WebSocket) {\n    return new Proxy(this, {\n      get(target, prop, receiver) {\n        if (prop === 'writable') {\n          return new WritableStream<Uint8Array>({\n            start(controller) {},\n            write(chunk) {\n              return new Promise((resolve, reject) => {\n                try {\n                  ws.send(chunk);\n                  resolve();\n                } catch (e) {\n                  reject(e);\n                }\n              });\n            },\n            close() {},\n            abort(reason) {},\n          });\n        }\n        return undefined;\n      },\n    });\n  }\n}\n","// import \"regenerator-runtime/runtime.js\";\nimport { BidirectionalStream } from \"./BidirectionalStream\";\nimport { DataGrams } from \"./DataGrams\";\nimport { ReceiveStream } from \"./ReceiveStream\";\nimport { SendStream } from \"./SendStream\";\n\ndeclare global {\n  interface Window {\n    WebTransport: any;\n  }\n}\n\nexport class WebTransport {\n  public closed: Promise<unknown>;\n  public ready: Promise<unknown>;\n  #ws: WebSocket;\n  #connErr: any;\n  datagrams: DataGrams;\n  constructor(public url: string) {\n    this.closed = new Promise((resolve, reject) => { });\n    this.ready = new Promise((resolve, reject) => {\n      url = url.replace(/^http/, 'ws');\n      this.#ws = new WebSocket(url);\n      this.#ws.addEventListener('open', () => {\n        resolve(null);\n      }),\n      this.#ws.addEventListener('error', (err) => {\n        this.#connErr = err;\n        reject(err);\n      }),\n      this.#ws.addEventListener('close', () => {\n        this.closed = new Promise((resolve, reject) => { });\n        reject(this.#connErr);\n      }),\n      this.datagrams = new DataGrams(this.#ws);\n    });\n  }\n  createSendStream(): SendStream {\n    return new SendStream(this.#ws);\n  }\n  receiveStream(): ReceiveStream{\n    return new ReceiveStream(this.#ws);\n  }\n  createBidirectionalStream(): Promise<BidirectionalStream> {\n    return new Promise((resolve, reject) => {\n      resolve(new BidirectionalStream(this.#ws));\n    })\n  }\n  receiveBidrectionalStreams(): BidirectionalStream {\n    return new BidirectionalStream(this.#ws);\n  }\n}\n\nif (typeof window !== 'undefined') {\n  if (typeof window.WebTransport === \"undefined\") {\n    window.WebTransport = WebTransport;\n  }\n}\n\nexport default WebTransport;\n"]}